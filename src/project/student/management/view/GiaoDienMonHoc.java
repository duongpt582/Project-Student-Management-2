
// do van hai 20207600
// pham thai duong 20207595
package project.student.management.view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import project.student.management.controller.QuanLyImpl;
import project.student.management.database.DBConnection;
import project.student.management.model.MonHoc;
import project.student.management.model.SinhVien;
import project.student.management.model.SinhVienCTMau;



public class GiaoDienMonHoc extends javax.swing.JPanel {

    private Connection conn;
    private PreparedStatement ps;
    QuanLyImpl ql;
    private DefaultTableModel model;
    
    public GiaoDienMonHoc() {
        initComponents();
        ql = new QuanLyImpl();
        conn = DBConnection.getConnection();      
        
        showComboBox();
       

    }
    
    private List<MonHoc> layDanhSachTatCaMonHoc() { // phương thức lấy danh sách tất cả các môn học từ cơ sở dữ liệu
        List<MonHoc> monHocList = new ArrayList<>();
        try {
            ps = conn.prepareStatement("SELECT * FROM monhoc WHERE 1");
            ResultSet rs = ps.executeQuery();
             
             while (rs.next()) {
                String nganhHoc = rs.getString(1);
                String tenMonHoc = rs.getString(2);
                String maMonHoc = rs.getString(3);
                double trongSo = rs.getDouble(4);
                int soTinChi = rs.getInt(5);
                monHocList.add(new MonHoc(tenMonHoc, maMonHoc, nganhHoc, trongSo, soTinChi));
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienMonHoc.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (monHocList.isEmpty()) {
            return null;
        } else {
            return monHocList;
        }

    }

    
    private List<String> layDanhSachNganhHoc() { // phương thức lấy danh sách các ngành học từ cơ sở dữ liệu
        List<String> monHocList = new ArrayList<>();
        try {
            ps = conn.prepareStatement("SELECT nganhHoc FROM ctdt WHERE 1");
             ResultSet rs = ps.executeQuery();
             
             while (rs.next()) {
                 String danhSachMonHoc = rs.getString(1);
                 monHocList.add(danhSachMonHoc);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienMonHoc.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (monHocList.isEmpty()) {
            return null;
        } else {
            return monHocList;
        }
    }
    
    private void showComboBox(){ //Thêm dữ liệu vào combobox
         List<String> data = new ArrayList<>();
        for (int i = 0; i < layDanhSachTatCaMonHoc().size(); i++) {
            data.add(layDanhSachTatCaMonHoc().get(i).getTenMonHoc());
        }
       
        data.add(0, "Mời chọn:"); //data[0]
        for(String s : data){
            monHocCombobox.addItem(s);
        }
    }
    
    private void showTable(List<SinhVien> sinhViens){ // phương thức để hiện bảng danh sách sinh viên 

        model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        for (int i = 0; i < sinhViens.size(); i++) {
            double diemTongKet = (sinhViens.get(i).getListMonHoc().get(0).getDiemGK() * sinhViens.get(i).getListMonHoc().get(0).getTrongSo() +
                                    sinhViens.get(i).getListMonHoc().get(0).getDiemCK() * ( 1.0 - sinhViens.get(i).getListMonHoc().get(0).getTrongSo()));
            model.addRow(new Object[]{
                sinhViens.get(i).getHoTen(),
                sinhViens.get(i).getMaSV(),
                sinhViens.get(i).getListMonHoc().get(0).getTenMonHoc(),
                sinhViens.get(i).getListMonHoc().get(0).getMaMonHoc(),
                sinhViens.get(i).getListMonHoc().get(0).getSoTinChi(),
                sinhViens.get(i).getListMonHoc().get(0).getTrongSo(),
                sinhViens.get(i).getListMonHoc().get(0).getHocKy(),
                sinhViens.get(i).getListMonHoc().get(0).getDiemGK(),
                sinhViens.get(i).getListMonHoc().get(0).getDiemCK(),
                diemTongKet
            });
        }
       
           
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        themdiemButton = new com.k33ptoo.components.KButton();
        monHocCombobox = new javax.swing.JComboBox<>();
        timSVButton = new com.k33ptoo.components.KButton();
        jLabel1 = new javax.swing.JLabel();
        maSVTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        diemckTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        kyHocTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        diemgkTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nganhhocCombobox = new javax.swing.JComboBox<>();
        monHocCombobox2 = new javax.swing.JComboBox<>();

        kGradientPanel1.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkGradientFocus(0);
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 255, 255));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(1200, 690));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Họ tên", "Mã SV", "Môn học", "Mã môn", "Số tín chỉ", "Trọng số", "Học kỳ", "Điểm GK", "Điểm CK", "Tổng kết"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(20);
        }

        themdiemButton.setText("Thêm điểm");
        themdiemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themdiemButtonActionPerformed(evt);
            }
        });

        monHocCombobox.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        monHocCombobox.setMaximumRowCount(7);

        timSVButton.setText("Tìm");
        timSVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timSVButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Mã SV");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Ngành học");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Kì học");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Điểm GK");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Môn học");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Điểm CK");

        nganhhocCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Công nghệ thông tin", "Quản trị kinh doanh", "Kỹ thuật Cơ điện tử" }));
        nganhhocCombobox.setSelectedIndex(-1);
        nganhhocCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nganhhocComboboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1184, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addGap(81, 81, 81)
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(kyHocTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                            .addComponent(maSVTextField)))
                                    .addComponent(jLabel3))
                                .addGap(92, 92, 92)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(41, 41, 41)
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(diemgkTextField)
                                            .addComponent(nganhhocCombobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabel4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(diemckTextField)
                                    .addComponent(monHocCombobox2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(209, 209, 209))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(themdiemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(monHocCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)
                                .addComponent(timSVButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(104, Short.MAX_VALUE))))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monHocCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timSVButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(maSVTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(nganhhocCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(monHocCombobox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(kyHocTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(diemgkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(diemckTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(themdiemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1184, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void themdiemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themdiemButtonActionPerformed
        // TODO add your handling code here:
        String maSV = maSVTextField.getText();
        String nganhHoc = nganhhocCombobox.getItemAt(nganhhocCombobox.getSelectedIndex());
        String monHoc = monHocCombobox2.getItemAt(monHocCombobox2.getSelectedIndex());
        String kyHoc = kyHocTextField.getText();
         double diemGK, diemCK;
        if (diemgkTextField.getText().isEmpty()) {
             diemGK = 0;
        } else {
             diemGK = Double.valueOf(diemgkTextField.getText());
        }
        
        if (diemckTextField.getText().isEmpty()) {
             diemCK = 0;
        } else {
             diemCK = Double.valueOf(diemckTextField.getText());
        }
        
        List<MonHoc> danhSachTatCaMonHoc = layDanhSachTatCaMonHoc();
        String maMonHoc = null;
        for (int i = 0; i < danhSachTatCaMonHoc.size(); i++) {
            if (monHoc != null) {
                if (monHoc.equals(danhSachTatCaMonHoc.get(i).getTenMonHoc())) {
                     maMonHoc = danhSachTatCaMonHoc.get(i).getMaMonHoc();
                }
            }
            
        }

        if (maSV != null && nganhHoc != null && monHoc != null && kyHoc != null) {
            
            try {
                conn = DBConnection.getConnection();
                ps = conn.prepareStatement("INSERT INTO `dsdk`(`maSV`, `maMonHoc`, `hocKy`, `diemGK`, `diemCK`) VALUES (?, ?, ?, ?, ?)");

                ps.setString(1, maSV);
                ps.setString(2, maMonHoc);
                ps.setString(3, kyHoc);
                ps.setDouble(4, diemGK);
                ps.setDouble(5, diemCK);

                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Thêm thành công!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Thêm thất bại!");
                Logger.getLogger(QuanLyImpl.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Thêm thất bại!");
        }
               
    }//GEN-LAST:event_themdiemButtonActionPerformed

    private void nganhhocComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nganhhocComboboxActionPerformed
        // TODO add your handling code here:
        if(nganhhocCombobox.getSelectedIndex() == 0) {
            monHocCombobox2.removeAllItems();
            monHocCombobox2.addItem("Cấu trúc dữ liệu và giải thuật");
            monHocCombobox2.addItem("Hệ điều hành");
            monHocCombobox2.addItem("Mạng máy tính");
            monHocCombobox2.addItem("Cơ sở dữ liệu");
            monHocCombobox2.addItem("Lập trình hướng đối tượng");
            
        } 
        // quan tri kinh doanh
        if(nganhhocCombobox.getSelectedIndex() == 1) {
            monHocCombobox2.removeAllItems();
            monHocCombobox2.addItem("Quản trị kinh doanh");
            monHocCombobox2.addItem("Quản trị chiến lược");
            monHocCombobox2.addItem("Đạo đức kinh doanh");
            monHocCombobox2.addItem("Quản trị quá trình kinh doanh");
            monHocCombobox2.addItem("Quản trị đa văn hóa");
        }
        //ki thuat co dien tu
        if(nganhhocCombobox.getSelectedIndex() == 2) {
            monHocCombobox2.removeAllItems();
            monHocCombobox2.addItem("Sức bền vật liệu");
           monHocCombobox2.addItem("Cơ sở thiết kế máy");
            monHocCombobox2.addItem("Nguyên lý kỹ thuật điện tử");
            monHocCombobox2.addItem("Linh kiện bán dẫn và vi mạch");
            monHocCombobox2.addItem("Kỹ thuật đo lường và cảm biến");
        }
    }//GEN-LAST:event_nganhhocComboboxActionPerformed

    private void timSVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timSVButtonActionPerformed
        // TODO add your handling code here:
        int index = monHocCombobox.getSelectedIndex();
        List<SinhVien> timKiemSVTheoMon = null;
        List<MonHoc> monHocList = layDanhSachTatCaMonHoc();
        if (index >= 1) {
            String tenMonHoc = monHocCombobox.getItemAt(index);
            System.out.println("" + tenMonHoc);
            
            String maMonHoc = monHocList.get(index-1).getMaMonHoc();
            System.out.println("ma mon hoc: " + maMonHoc);
            
            timKiemSVTheoMon = ql.timKiemSVTheoMon(maMonHoc);
            System.out.println("size: " + timKiemSVTheoMon.size());
           
        }
        
        if (timKiemSVTheoMon != null) {
            showTable(timKiemSVTheoMon);
        }
        
    }//GEN-LAST:event_timSVButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField diemckTextField;
    private javax.swing.JTextField diemgkTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private javax.swing.JTextField kyHocTextField;
    private javax.swing.JTextField maSVTextField;
    private javax.swing.JComboBox<String> monHocCombobox;
    private javax.swing.JComboBox<String> monHocCombobox2;
    private javax.swing.JComboBox<String> nganhhocCombobox;
    private com.k33ptoo.components.KButton themdiemButton;
    private com.k33ptoo.components.KButton timSVButton;
    // End of variables declaration//GEN-END:variables

    
    
}
